name: CI and CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set UP JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: temurin

      - name: Set UP NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 22.17.0

      - name: Cache Node.Js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NodeJs Dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint

      - name: Run Unit Test
        run: npm run test

      # - name: Run detox (debug)
      #   run: npm run detox:genymotion_debug

      # - name: Run detox (release)
      #   run: npm run detox:genymotion_release

      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"ðŸš¨ Testing Failed Error In Testing Linting, Prettier !"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Notification on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"âœ… Testing Passed Hooray !!!"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set UP JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: temurin

      - name: Set UP NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 22.17.0

      - name: Cache Node.Js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NodeJs Dependencies
        run: npm install

      - name: Install Fastlane
        run: sudo gem install fastlane -NV

      - name: Deploy In The Google Playstore
        run: |
          echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > android/fastlane/playstore-credentials.json
          cd android
          fastlane playstore

      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"ðŸš¨ Google Playstore Deployment Failed"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Notification on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content":"âœ… Google Playstore Deployment Successfulll Hooray !!!"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      # - name: Email Notification To Anyone
      #   if: failure()
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: smtp.gmail.com
      #     username: ${{ secrets.EMAIL_USERNAME }}
      #     password: ${{ secrets.EMAIL_PASSWORD }}
      #     subject: CI Pipeline Failure
      #     to: ${{ secrets.TO_EMAIL }}
      #     body: The CI Pipeline Has Failed Fix It As Soon As Possible.